plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 5,
vertex.color= V(G)$color,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.width=E(G)$weight,
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 10,
vertex.color= V(G)$color,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.width=E(G)$weight,
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 15,
vertex.color= V(G)$color,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.width=E(G)$weight,
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.width=E(G)$weight,
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
g = read_graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_subset.txt", format = "ncol")
plot(g, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = V(g)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = V(G)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
#vertex.label = V(G)$name,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(G, layout = layout.kamada.kawai,
main = G$name,
vertex.label = NA,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 15,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 5,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 5,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black", width=1024,height=768)
library("igraph")
g = read.graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_subset.txt", format = "ncol", directed = TRUE)
g = read_graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_subset.txt", format = "ncol")
plot.igraph(g,vertex.size=2, vertex.label=NA, layout=layout.kamada.kawai)
G <- graph( c(1,2,1,3,1,4,3,4,3,5,5,6,6,7,7,8,8,9,3,8,5,8), directed = FALSE )
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 5,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
library("igraph")
g = read.graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_subset.txt", format = "ncol", directed = TRUE)
plot.igraph(g,vertex.size=2, vertex.label=NA, layout=layout.kamada.kawai)
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 5,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
#plot.igraph(g,vertex.size=2, vertex.label=NA, layout=layout.kamada.kawai)
library("igraph")
g = read.graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_subset.txt", format = "ncol", directed = TRUE)
#plot.igraph(g,vertex.size=2, vertex.label=NA, layout=layout.kamada.kawai)
plot(g, layout = layout.kamada.kawai,
main = g$name,
vertex.label = NA,
vertex.size = 5,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
edge.color="black")
tkplot(g)
tkplot(g, vertex.size = 5)
tkplot(g, vertex.size = 5, vertex.label = NA, layout = layout.kamada.kawai)
tkplot(g, vertex.size = 5, vertex.label = NA, layout = layout.kamada.kawai, canvas.width = 1024)
tkplot(g, vertex.size = 5, vertex.label = NA, layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 768)
tkplot(g, vertex.size = 5, vertex.label = NA, layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
tkplot(g, vertex.size = 5,
#vertex.label = NA,
layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
tkplot(g, vertex.size = 5, vertex.color="green"
vertex.label = NA,
vertex.c = NA,
layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
tkplot(g, vertex.size = 5, vertex.color="green",
vertex.label = NA,
vertex.c = NA,
layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
tkplot(g, vertex.size = 5, vertex.color="green", vertex.label = NA, layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
tkplot(g, vertex.size = 5, vertex.color="green", vertex.label = NA, layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans")
tkplot(g, vertex.size = 5,
#vertex.color="green",
vertex.label = NA,
vertex.frame.color= "white",
vertex.label.color = "white",
vertex.label.family = "sans",
layout = layout.kamada.kawai, canvas.width = 1024, canvas.height = 1024)
setwd("~/")
setwd("D:/Dropbox/MSBA/msbaProjects/NetworkAnalytics/twitterAssignment")
library(igraph)
library(ggplot2)
library(psych)
# Network structure visualization
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
tkplot(g, vertex.size = 5,
vertex.color="#5BA5F5",
vertex.label = NA,
vertex.frame.color= "black",
vertex.label.color = "white",
vertex.label.family = "sans",
layout = layout.kamada.kawai, canvas.width = 610, canvas.height = 610)
wc <- fastgreedy.community(g)
wc <- cluster_walktrap(g)
membership(wc)[1:10]
wc <- walktrap.community(g)
wc <- fastgreedy.community(g)
wc <- walktrap.community(g)
colors <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.5,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label.size = 0.1,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
library(igraph)
library(ggplot2)
library(psych)
# Network structure visualization
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
tkplot(g, vertex.size = 5,
vertex.color="#5BA5F5",
vertex.label = NA,
vertex.frame.color= "black",
vertex.label.color = "white",
vertex.label.family = "sans",
layout = layout.kamada.kawai, canvas.width = 610, canvas.height = 610)
# Plot with membership
wc <- walktrap.community(g)
colors <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
wc <- walktrap.community(g)
colors <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
?walktrap.community
# Data analysis
graph = read.graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_complete.txt", format = "ncol", directed = TRUE)
graph = read.graph("D:/Dropbox/MSBA/NetworkAnalytics/data/graph_complete.txt", format = "ncol", directed = TRUE)
graph = read.graph("data/graph_complete.txt", format = "ncol", directed = TRUE)
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
zeroFollowers = V(graph)[degree(graph, mode="in")==0]
zeroFDF = data.frame("user_id" = zeroFollowers$name, "follower_counts" = 0)
# User with followers
haveFollowers = V(graph)[degree(graph, mode="in")>0]
haveFDF = data.frame("user_id" = haveFollowers$name, "follower_counts" = degree(graph, haveFollowers, mode="in"))
haveFDF = haveFDF[order(-haveFDF$follower_counts),]
# Merge two dataframes
followerDist = rbind(haveFDF, zeroFDF)
followerDist = followerDist[order(-followerDist$follower_counts),]
# Plot Distribution - bar plot
conTableDf = as.data.frame(table(followerDist$follower_counts))
names(conTableDf) = c("follower_counts", "node_counts")
ggplot(conTableDf, aes(x=conTableDf$follower_counts, y = conTableDf$node_counts)) + geom_bar(stat="identity") +
scale_y_continuous(name="Node counts", breaks=pretty(conTableDf$node_counts, n=10)) +
scale_x_discrete(name="Number of followers", breaks=c(0, 10, 20, 30, 40, 50, 60, 80, 90, 100, max(followerDist$follower_counts)))
followerDist$log_follower_counts = ifelse(followerDist$follower_counts >0, followerDist$follower_counts, 0.1)
followerDist$log_follower_counts = log(followerDist$log_follower_counts)
ggplot(followerDist, aes(x = log_follower_counts))+geom_density() + scale_x_continuous(name="Log number of followers", breaks = pretty(followerDist$log_follower_counts, n=10))
describe(followerDist$follower_counts)
library(igraph)
library(ggplot2)
library(psych)
# Network structure visualization
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
tkplot(g, vertex.size = 5,
vertex.color="#5BA5F5",
vertex.label = NA,
vertex.frame.color= "black",
vertex.label.color = "white",
vertex.label.family = "sans",
layout = layout.kamada.kawai, canvas.width = 610, canvas.height = 610)
# Plot with membership
wc <- walktrap.community(g)
colors <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
# Data analysis
graph = read.graph("data/graph_complete.txt", format = "ncol", directed = TRUE)
# User with 0 followers
zeroFollowers = V(graph)[degree(graph, mode="in")==0]
zeroFDF = data.frame("user_id" = zeroFollowers$name, "follower_counts" = 0)
# User with followers
haveFollowers = V(graph)[degree(graph, mode="in")>0]
haveFDF = data.frame("user_id" = haveFollowers$name, "follower_counts" = degree(graph, haveFollowers, mode="in"))
haveFDF = haveFDF[order(-haveFDF$follower_counts),]
# Merge two dataframes
followerDist = rbind(haveFDF, zeroFDF)
followerDist = followerDist[order(-followerDist$follower_counts),]
# Plot Distribution - bar plot
conTableDf = as.data.frame(table(followerDist$follower_counts))
names(conTableDf) = c("follower_counts", "node_counts")
ggplot(conTableDf, aes(x=conTableDf$follower_counts, y = conTableDf$node_counts)) + geom_bar(stat="identity") +
scale_y_continuous(name="Node counts", breaks=pretty(conTableDf$node_counts, n=10)) +
scale_x_discrete(name="Number of followers", breaks=c(0, 10, 20, 30, 40, 50, 60, 80, 90, 100, max(followerDist$follower_counts)))
# Log transform + 0.1 to 0 follower users
followerDist$log_follower_counts = ifelse(followerDist$follower_counts >0, followerDist$follower_counts, 0.1)
followerDist$log_follower_counts = log(followerDist$log_follower_counts)
## Density plot
ggplot(followerDist, aes(x = log_follower_counts))+geom_density() + scale_x_continuous(name="Log number of followers", breaks = pretty(followerDist$log_follower_counts, n=10))
# Stat summaries
describe(followerDist$follower_counts)
# Top 10
ids_to_usernames <- read.csv("D:/Dropbox/MSBA/NetworkAnalytics/data/ids_to_usernames.csv")
ids_to_usernames <- read.csv("data/ids_to_usernames.csv")
# Merge by user id - join
top10Users = merge(followerDist, ids_to_usernames, by.x = "user_id", by.y = "id", all = FALSE)
top10Users = top10Users[order(-top10Users$follower_counts),c(1,2,4)]
top10Users = head(top10Users, n=10)
print(top10Users)
exp(0)
log(0.1)
exp(-2.302585)
#' ---
#' title: "Twitter Assignment"
#' author: "Will Y. Zhang"
#' ---
library(igraph)
library(ggplot2)
library(psych)
# Network structure visualization
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
eb <- edge.betweenness.community(g)
wc <- walktrap.community(g)
colors <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
b <- edge.betweenness.community(g)
colors <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
b <- edge.betweenness.community(g)
colors <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
wc <- walktrap.community(g)
colors_wc <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
wc <- walktrap.community(g)
colors_wc <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
eb <- edge.betweenness.community(g)
colors_eb <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors[membership(eb)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors_eb,
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors[membership(eb)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
plot(g,
vertex.size = 3,
vertex.color=colors[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
# Plot with membership - edge.betweenness.community
eb <- edge.betweenness.community(g)
colors_eb <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors_eb[membership(eb)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
eb <- edge.betweenness.community(g)
colors_eb <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors_eb[membership(eb)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
#' ---
#' title: "Twitter Assignment"
#' author: "Will Y. Zhang"
#' ---
library(igraph)
library(ggplot2)
library(psych)
# Network structure visualization
g = read.graph("data/graph_subset.txt", format = "ncol", directed = TRUE)
tkplot(g, vertex.size = 5,
vertex.color="#5BA5F5",
vertex.label = NA,
vertex.frame.color= "black",
vertex.label.color = "white",
vertex.label.family = "sans",
layout = layout.kamada.kawai, canvas.width = 610, canvas.height = 610)
# Plot with membership - walktrap.community
wc <- walktrap.community(g)
colors_wc <- rainbow(max(membership(wc)))
plot(g,
vertex.size = 3,
vertex.color=colors_wc[membership(wc)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
# Plot with membership - edge.betweenness.community
eb <- edge.betweenness.community(g)
colors_eb <- rainbow(max(membership(eb)))
plot(g,
vertex.size = 3,
vertex.color=colors_eb[membership(eb)],
vertex.label = NA,
vertex.label.family = "sans",
edge.arrow.size=0.2,
layout=layout.kamada.kawai)
# Data analysis
graph = read.graph("data/graph_complete.txt", format = "ncol", directed = TRUE)
# Count User with 0 followers
zeroFollowers = V(graph)[degree(graph, mode="in")==0]
zeroFDF = data.frame("user_id" = zeroFollowers$name, "follower_counts" = 0)
# Count User with followers and calculate the follower counts
haveFollowers = V(graph)[degree(graph, mode="in")>0]
haveFDF = data.frame("user_id" = haveFollowers$name, "follower_counts" = degree(graph, haveFollowers, mode="in"))
haveFDF = haveFDF[order(-haveFDF$follower_counts),]
# Merge two dataframes
followerDist = rbind(haveFDF, zeroFDF)
followerDist = followerDist[order(-followerDist$follower_counts),]
# Plot Distribution - bar plot
conTableDf = as.data.frame(table(followerDist$follower_counts))
names(conTableDf) = c("follower_counts", "node_counts")
ggplot(conTableDf, aes(x=conTableDf$follower_counts, y = conTableDf$node_counts)) + geom_bar(stat="identity") +
scale_y_continuous(name="Node counts", breaks=pretty(conTableDf$node_counts, n=10)) +
scale_x_discrete(name="Number of followers", breaks=c(0, 10, 20, 30, 40, 50, 60, 80, 90, 100, max(followerDist$follower_counts)))
# Log transform follower counts
# For zero follower accounts, replace 0.1 to 0 for log tranformation
followerDist$log_follower_counts = ifelse(followerDist$follower_counts >0, followerDist$follower_counts, 0.1)
followerDist$log_follower_counts = log(followerDist$log_follower_counts)
## Density plot of the logscale distribution
ggplot(followerDist, aes(x = log_follower_counts))+geom_density() + scale_x_continuous(name="Log number of followers", breaks = pretty(followerDist$log_follower_counts, n=10))
# Stastistical summaries
describe(followerDist$follower_counts)
# Calculate Top 10 users
ids_to_usernames <- read.csv("data/ids_to_usernames.csv")
# Merge data frame by user id - join
top10Users = merge(followerDist, ids_to_usernames, by.x = "user_id", by.y = "id", all = FALSE)
top10Users = top10Users[order(-top10Users$follower_counts),c(1,2,4)]
top10Users = head(top10Users, n=10)
print(top10Users)
